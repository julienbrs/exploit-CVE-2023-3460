import requests
from bs4 import BeautifulSoup

base_url = "http://localhost:8000"
login_url = f"{base_url}/wp-login.php"
admin_url = f"{base_url}/wp-admin/"
session = requests.Session()

### LOGIN WITH ADMIN CREDENTIALS ###

# fetch security token 
login_page = session.get(f"{base_url}/wp-login.php")
login_page_soup = BeautifulSoup(login_page.content, 'html.parser')
nonce = login_page_soup.find('input', {'name': 'log'}).get('value')

login_data = {
    "log": "admin",
    "pwd": "password",
    "wp-submit": "Log In",
    "redirect_to": admin_url,
    "testcookie": "1",
    "security": nonce
}

# send login request
response = session.post(login_url, data=login_data)

# verify if login was successful
admin_page = session.get(admin_url)
admin_soup = BeautifulSoup(admin_page.content, 'html.parser')

if admin_soup.find('title').text == 'Dashboard ‹ MonBlog — WordPress':
    print("Login successful")
else:
    print("Login failed or unexpected redirection")
    exit()

### ACTIVATE PLUGIN ULTIMATE MEMBER ###
    
plugins_page = session.get(f"{base_url}/wp-admin/plugins.php")
plugins_page_soup = BeautifulSoup(plugins_page.content, 'html.parser')

activation_link = plugins_page_soup.find('a', {'href': True, 'aria-label': lambda x: x and 'Activate Ultimate Member' in x})
if activation_link:
    activation_href = activation_link['href']
    nonce_value = activation_href.split('_wpnonce=')[1].split('&')[0]

    activation_url = f"{base_url}/wp-admin/plugins.php?action=activate&plugin=ultimate-member%2Fultimate-member.php&_wpnonce={nonce_value}"
    activation_response = session.get(activation_url)

    if "Plugin activated" in activation_response.text:
        print("Plugin activated")
    else:
        print("Plugin activation failed")
else:
    print("Link to activate Ultimate Member not found")


### CREATE DEFAULT PAGES ###

create_pages_url = f"{base_url}/wp-admin/plugins.php?activate=true&plugin_status=all&paged=1&s&um_adm_action=install_core_pages"
create_pages_response = session.get(create_pages_url, allow_redirects=False)

# Vérifier si la requête a été redirigée vers la page d'édition
if create_pages_response.status_code == 302 and 'admin.php?page=um_options' in create_pages_response.headers.get('Location', ''):
    print("Pages created successfully")
else:
    print("Failed to create pages")
